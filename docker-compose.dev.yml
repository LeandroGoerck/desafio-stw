version: '3.9'
services:
  frontend:
    build: ./frontend
    platform: linux/x86_64
    container_name: frontend_receitas
    ports: #rede local : rede interna dos containeres
     - 3000:3000
    depends_on:
      backend:
        condition: service_healthy
    # Os `healthcheck` devem garantir que a aplicação
    # está operacional, antes de liberar o container
    healthcheck:
      test: ["CMD", "lsof", "-t", "-i:3000"]  # Caso utilize outra porta interna para o front, altere ela aqui também
      timeout: 10s
      retries: 5
  backend:
    build: ./backend
    container_name: backend_receitas
    platform: linux/x86_64
    restart: 'always'
    ports: #rede local : rede interna dos containeres
      - 3001:3001
    command: npm run dev
    volumes:
      - './backend/src:/app/src'
    depends_on:
      db:
        condition: service_healthy
    environment:
      - PORT=3001
      - DB_USER=root
      - DB_PASS=1234
      - DB_HOST=db
      - DB_NAME=BANCO_DE_RECEITAS
      - DB_PORT=3306
    healthcheck:
      test: ["CMD", "lsof", "-t", "-i:3001"] # Caso utilize outra porta interna para o back, altere ela aqui também
      timeout: 10s
      retries: 5
  db:
    image: mysql:8.0.21
    platform: linux/x86_64
    container_name: db_receitas
    ports: #rede local : rede interna dos containeres
      - 3306:3306
    environment:
      - MYSQL_ROOT_PASSWORD=1234
    restart: 'always'
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"] # Deve aguardar o banco ficar operacional
      timeout: 10s
      retries: 5
    cap_add:
      - SYS_NICE # Deve omitir alertas menores
